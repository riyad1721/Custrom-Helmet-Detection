# -*- coding: utf-8 -*-
"""yolo-v4-tiny-custrom-training-by-md-riyad-hossain.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I7DFIa4kJ9WeNBh9w-G0XNxNdBEjUbbP

#This work done by google colab
Step 1 - first connected to the Google Colab VM, click on Runtime in the menu bar and click on Change runtime type. Select GPU and click on save

Step 2 - Clone the Darknet git repository on the Colab VM

step 3 - Create a folder named yolov4-tiny in your drive. Next, create another folder named training inside the yolov4-tiny folder. This is where we will save our trained weights

step 4 -  Create & upload the following files which we need for training a custom detection. files are

a. Labeled Custom Dataset ( this is custrom annotation part. for this session i am working labelimg tool for creating custrom dataset, remember the annotation file must be a .text file, after labeling creating zip file this annotating folder and upload the drive as a obj.zip)

b. Custom cfg file

c. obj.data and obj.names files

d. process.py file (to create train.txt and test.txt files for training)
"""

#auth : Md Reyad Hossain
!git clone https://github.com/AlexeyAB/darknet

"""Mount drive and link your folder"""

# Commented out IPython magic to ensure Python compatibility.
# %cd ..
from google.colab import drive
drive.mount('/content/gdrive')

"""Run the following command to create a symbolic link so that now the path /content/gdrive/My\ Drive/ is equal to /mydrive 
note: i am not following this lastly. i will provide adjact path all the session
"""

!ln -s /content/gdrive/My\ Drive/ /mydrive

"""Make changes in the makefile to enable OPENCV and GPU
(Also set CUDNN, CUDNN_HALF, and LIBSO to 1)

"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile
!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile
!sed -i 's/LIBSO=0/LIBSO=1/' Makefile

""" Run make command to build darknet
 
"""

!make

"""Copy the obj.zip file from your drive into the darknet directory and unzip it into the data folder in the Colab VM"""

!cp /content/gdrive/MyDrive/yolov4-tiny/obj.zip ../
!unzip ../obj.zip -d data/

"""copy your yolov4-tiny-custom.cfg file so that it is now in /darknet/cfg/ folder in the Colab VM"""

!cp /content/gdrive/MyDrive/yolov4-tiny/yolov4-tiny-custom.cfg ./cfg

"""Copy the obj.names and obj.data files so that they are now in /darknet/data/ folder in the Colab VM"""

!cp /content/gdrive/MyDrive/yolov4-tiny/obj.names ./data
!cp /content/gdrive/MyDrive/yolov4-tiny/obj.data  ./data

"""Copy the process.py file into the current darknet directory in the Colab VM"""

!cp /content/gdrive/MyDrive/yolov4-tiny/process.py ./

"""#Run the process.py python script to create the train.txt & test.txt files inside the data folder"""

!python process.py

"""List the contents of the data folder to check if the train.txt and test.txt files have been created"""

!ls data/

"""Here we use transfer learning. Instead of training a model from scratch, we use pre-trained YOLOv4-tiny weights which have been trained up to 29 convolutional layers. Run the following command to download the YOLOv4-tiny pre-trained weights file."""

!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v4_pre/yolov4-tiny.conv.29

"""For best results, you should stop the training when the average loss is less than 0.05 if possible or at least constantly below 0.3, else train the model until the average loss does not show any significant change for a while.

The map parameter here gives us the Mean Average Precision. The higher the mAP the better it is for object detection.
"""

!./darknet detector train /content/darknet/data/obj.data /content/darknet/cfg/yolov4-tiny-custom.cfg yolov4-tiny.conv.29 -dont_show -map

"""If you get disconnected or lose your session, you donâ€™t have to start training your model from scratch again. You can restart training from where you left off. Use the weights that were saved last. The weights are saved every 100 iterations as yolov4-tiny-custom_last.weights in the yolov4-tiny/training folder on your drive"""

!./darknet detector train data/obj.data cfg/yolov4-tiny-custom.cfg /mydrive/yolov4-tiny/training/yolov4-tiny-custom_last.weights -dont_show -map

"""Check final The map parameter here gives us the Mean Average Precision. The higher the mAP the better it is for object detection"""

!./darknet detector map /content/darknet/data/obj.data /content/darknet/cfg/yolov4-tiny-custom.cfg /content/gdrive/MyDrive/yolov4-tiny/training/yolov4-tiny-custom_final.weights

"""after train i am testing a video file"""

!./darknet detector demo /content/darknet/data/obj.data /content/darknet/cfg/yolov4-tiny-custom.cfg /content/gdrive/MyDrive/yolov4-tiny/training/yolov4-tiny-custom_final.weights /content/gdrive/MyDrive/yolov4-tiny/test.mp4 -benchmark

!./darknet detector demo /content/darknet/data/obj.data /content/darknet/cfg/yolov4-tiny-custom.cfg /content/gdrive/MyDrive/yolov4-tiny/training/yolov4-tiny-custom_final.weights /content/gdrive/MyDrive/yolov4-tiny/test.mp4 -i 0 -thresh 0.25